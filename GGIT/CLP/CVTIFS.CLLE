/*-------------------------------------------------------------------*/
/* Convertion des sources d'un fichier vers un répertoire de l'ifs   */
/*-------------------------------------------------------------------*/
PGM PARM(&LIBsrc &filsrc &rep &rac)
DCL &LIBsrc *cHAR 10
DCL &filsrc *cHAR 10
DCL &rep    *cHAR 03
dcl &rac    *char 20
DCL &nbr    *dec  10
DCL &atr    *cHAR 10
DCL &typ    *cHAR 08
DCL &sql    *cHAR 512
dcl &cpt *int
             DCLF       FILE(QSYS/QAFDMBRL)
             DCL        VAR(&REPERT) TYPE(*CHAR) LEN(20)  /*prod*/
             DCL        VAR(&REPERT2) TYPE(*CHAR) LEN(30) /*src*/
             DCL        VAR(&REPERT3) TYPE(*CHAR) LEN(40) /*mbr*/
             dcl &fin_fic *lgl
             INCLUDE    SRCMBR(ERREUR1)
 /* Création du répertoire de la application */
 CHGVAR     VAR(&REPERT) VALUE(&RAC *TCAT &LIBSRC)
CRTDIR &repert
monmsg CPFA0A0
/* Création fichier source intermediaire */
             CHKOBJ     OBJ(QTEMP/SOURCE) OBJTYPE(*FILE)
             MONMSG CPF9801 EXEC(DO)
             CRTPF      FILE(QTEMP/SOURCE) RCDLEN(112)
             ENDDO
             OVRDBF     FILE(QAFDMBRL) TOFILE(QTEMP/WAFDMBRL)
 /*------------------------------------------------------------------*/
 /* traitement un source                                             */
 /*------------------------------------------------------------------*/
             RTVOBJD    OBJ(&LIBSRC/&FILSRC) OBJTYPE(*FILE) +
                          OBJATR(&ATR)
             if cond(&atr *ne 'PF') then(do)
             SNDUSRMSG  MSG(&FILSRC *BCAT 'N''est pas un fichier +
                          source') MSGTYPE(*INFO)
             return
             enddo
             DSPFD      FILE(&LIBSRC/&filsrc) TYPE(*MBRLIST) +
                          OUTPUT(*OUTFILE) OUTFILE(QTEMP/WAFDMBRL)
             RTVMBRD    FILE(QTEMP/WAFDMBRL) NBRCURRCD(&NBR)
             if cond(&nbr > 0) then(do)
/* création du répertoire par fichier source */
    chgvar &repert2 (&repert *tcat '/' *tcat &rep )
CRTDIR &repert2
monmsg CPFA0A0
             chgvar &fin_fic ('0')
/* Lecture de tous les sources                            */
             DOUNTIL    COND(&FIN_FIC)
                RCVF
                MONMSG     MSGID(CPF0864) EXEC(DO)
                   CHGVAR     VAR(&FIN_FIC) VALUE('1')
                ENDDO
  /* */
  if cond(  &FIN_FIC = '0') then(do)
  if cond(&mlname *ne ' ') then(do)
             CPYF       FROMFILE(&LIBsrc/&FIlsrc) +
                          TOFILE(QTEMP/SOURCE) FROMMBR(&Mlname) +
                          MBROPT(*REPLACE) FMTOPT(*CVTSRC)
                          monmsg cpf0000 exec(do)
                          enddo
                  SELECT
   /* mise en place du type                 */
                     WHEN       COND(&MLSEU *EQ 'SQLR') then(do)
                     chgvar &typ ('SQLRPGLE')
                     enddo
                     WHEN       COND(&MLSEU *EQ 'RPGL') then(do)
                     chgvar &typ ('RPGLE')
                     enddo
             OTHERWISE  CMD(DO)
                     chgvar &typ &mlseu
                     enddo
                  ENDSELECT
             CPYTOSTMF  +
                          FROMMBR('/qsys.lib/QTEMP.lib/SOURCE.file/SO+
                          URCE.MBR') TOSTMF(&REPERT2 *TCAT '/' +
                          *TCAT &MLNAME *TCAT '.' *TCAT &typ  ) +
                          STMFOPT(*REPLACE) STMFCCSID(*PCASCII)
CHGvar &repert3 (&REPERT2 *TCAT '/' *TCAT &MLNAME *TCAT '.' +
                  *TCAT &TYP)
CHGATR OBJ(&REPERT3)  +
       ATR(*TEXT)     +
       VALUE(*NONE)    +
       TEXT(&MLMTXT)
 /* ecrire dans le fichier liste */
 /* remplacement ''' par ' ' */
 DOFOR   VAR(&cpt)  FROM(1)  TO(50)
         if cond(%sst(&mlmtxt &cpt 1)  = '''') then(do)
           chgvar %sst(&mlmtxt &cpt 1)  ' '
         enddo
 ENDDO
 chgvar &sql ( +
  'INSERT INTO LSTGIT VALUES(''' *tcat &rep *tcat ''', ''' *tcat +
    &mlname *tcat ''', ''' *tcat +
    &typ    *tcat ''', ''' *tcat +
    &mlmtxt  *tcat ''')' )
             RUNSQL     SQL(&SQL) COMMIT(*NONE)
             monmsg sql0000
             ENDDO
             ENDDO
             ENDDO
             enddo
             INCLUDE    SRCMBR(ERREUR2)
endpgm
